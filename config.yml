tracing:
  json: false # change to `true` for production

# Identity options
identity:
  # Represents the expected validator pubkey in base58.
  # Do not send transactions if Quic identity doesn't match specified one
  expected: null # 3RY3bvCRoCoSTy5qSNL1ezeGQwt1ufToLSKdmEZZjb4Z
  # Load specified keypair from file
  keypair: null

# RPC & gRPC for upstream validator
upstream:
  # Primary gRPC service
  primary_grpc:
    # gRPC service endpoint
    endpoint: http://127.0.0.1:10000
    # Optional token for access to gRPC
    x_token: null
  # Secondary gRPC service, by default primary would be used
  # Used only for additional transaction status subscribe
  secondary_grpc: null
  # RPC endpoint
  rpc: http://127.0.0.1:8899
  # Cluster nodes information update interval in milliseconds
  cluster_nodes_update_interval: 30s
  # Stake update interval
  stake_update_interval: 30s

# jet-gateway endpoints
# jet_gateway:
#   # Max transactions requested from proxy (every 100ms), by default calculated from stake value
#   max_streams: null
#   # gRPC service endpoints, attempt to connect in round-robin fashion
#   endpoints:
#     - http://127.0.0.1:8002
#   # Access token
#   x_token: null

# Admin server listen options
listen_admin:
  # RPC listen address
  bind:
    # - env: JET_ADMIN_ADDR
    - 127.0.0.1:8001

# Solana-like server listen options
listen_solana_like:
  # Solana like RPC listen address
  bind:
    # - env: JET_SOLANA_LIKE_ADDR
    - 127.0.0.1:8000
  # Allow to do sanitize check on RPC server (required for ALTs), supported only on patched nodes
  # If option set to `true`` then Jet would check `sanitizeTransaction` method before start
  # See https://github.com/rpcpool/solana-public/tree/v1.17.31-rpc-sanitize-tx
  proxy_sanitize_check: true
  # Allow to do preflight check on RPC server (simulateTransaction)
  proxy_preflight_check: true

# Send retry options
send_transaction_service:
  # Default max retries of sending transaction
  default_max_retries: null
  # Service max retries
  service_max_retries: 300
  # Stop send transaction when landed at specified commitment
  stop_send_on_commitment: confirmed
  # The number of upcoming leaders to which to forward transactions
  leader_forward_count: 3
  # Try to send transaction every retry_rate duration
  retry_rate: 1s
  # Drop transactions from the pool once max retries limit is reached (landed statistic would be invalid)
  relay_only_mode: false

# Quic config
quic:
  # Total number of pools (one pool per remote address, i.e. one per leader)
  # Solana value is 1024
  # https://github.com/solana-labs/solana/blob/v1.17.31/connection-cache/src/connection_cache.rs#L22
  connection_max_pools: 256
  # TPU connection pool size per remote address
  # Default is `solana_tpu_client::tpu_client::DEFAULT_TPU_CONNECTION_POOL_SIZE` -- (1 from 1.17.33 / 1.18.12, previous value is 4)
  connection_pool_size: 1
  # Number of immediate retries in case of failed send (not applied to timedout)
  # Solana do not retry, atlas doing 4 retries, by default we keep same limit as Solana
  send_retry_count: 1
  # Kind of Quic port: `normal` or `forwards`
  tpu_port: normal
  # Quic handshake timeout.
  # Default is `solana_sdk::quic::QUIC_CONNECTION_HANDSHAKE_TIMEOUT` -- 60s
  connection_handshake_timeout: 2s
  # Maximum duration of inactivity to accept before timing out the connection.
  # https://docs.rs/quinn/0.10.2/quinn/struct.TransportConfig.html#method.max_idle_timeout
  # Default is `solana_sdk::quic::QUIC_KEEP_ALIVE` -- 2s
  max_idle_timeout: 2s
  # Period of inactivity before sending a keep-alive packet
  # https://docs.rs/quinn/0.10.2/quinn/struct.TransportConfig.html#method.keep_alive_interval
  # Default is `solana_sdk::quic::QUIC_KEEP_ALIVE` -- 1s
  keep_alive_interval: 1s
  # Send tx timeout, for batches value multipled by number of transactions in the batch
  # Solana default value is 10 seconds
  send_timeout: 10s
  # Ports used by QUIC endpoints
  # https://docs.rs/solana-net-utils/1.18.11/solana_net_utils/constant.VALIDATOR_PORT_RANGE.html
  # Default is `solana_net_utils::VALIDATOR_PORT_RANGE` -- `8000..10000`
  endpoint_port_range:
    start: 8000
    end: 10000
  # See `solana_streamer::nonblocking::quic::compute_max_allowed_uni_streams`
  # https://github.com/anza-xyz/agave/blob/v1.17.31/streamer/src/nonblocking/quic.rs#L244-L279
  # Minumum value is `QUIC_MAX_UNSTAKED_CONCURRENT_STREAMS` -- for unstaked nodes, 128
  # Value for staked calculated from total stake, but maximum is `QUIC_MAX_STAKED_CONCURRENT_STREAMS`
  send_max_concurrent_streams: 128
  # Extra TPU forward (transactions would be always sent to these nodes)
  # extra_tpu_forward:
  #   - leader: EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v
  #     quic: 208.61.229.3:8442
  #     quic_forwards: 208.61.229.3:8443

# Send metrics to lewis
# metrics_upstream:
#   # lewis gRPC metrics endpoint
#   endpoint: http://127.0.0.1:8005
#   # Events gRPC queue size
#   queue_size_grpc: 1000
#   # Event buffer queue size
#   queue_size_buffer: 100000

features:
  enabled_features:
    - transaction_payload_v2
    - yellowstone_shield

prometheus:
  url: http://127.0.0.1:8429/api/v1/import/prometheus
